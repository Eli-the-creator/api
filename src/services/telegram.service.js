// // –°–æ–∑–¥–∞–µ–º –∏ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å
// const telegramService = new TelegramService();
// module.exports = telegramService;

const axios = require("axios");
const config = require("../../config/default");
const { getLogger } = require("../utils/logger");

const logger = getLogger("TelegramService");

/**
 * –°–µ—Ä–≤–∏—Å –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —á–µ—Ä–µ–∑ Telegram
 */
class TelegramService {
  constructor() {
    this.token = process.env.TELEGRAM_BOT_TOKEN;
    this.chatId = process.env.TELEGRAM_CHAT_ID;
    this.baseUrl = this.token
      ? `https://api.telegram.org/bot${this.token}`
      : null;
    this.enabled = this.token && this.chatId;

    if (!this.enabled) {
      logger.warn(
        "Telegram notifications are disabled. TELEGRAM_BOT_TOKEN or TELEGRAM_CHAT_ID is missing"
      );
    } else {
      logger.info("Telegram notification service initialized");
    }
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –≤–∫–ª—é—á–µ–Ω—ã –ª–∏ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
   * @returns {boolean} - –°—Ç–∞—Ç—É—Å –≤–∫–ª—é—á–µ–Ω–∏—è
   */
  isEnabled() {
    return this.enabled;
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram
   * @param {string} text - –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
   * @returns {Promise<boolean>} - –†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏
   */
  async sendMessage(text) {
    if (!this.isEnabled()) {
      return false;
    }

    try {
      const response = await axios.post(`${this.baseUrl}/sendMessage`, {
        chat_id: this.chatId,
        text: text,
        parse_mode: "HTML",
        disable_web_page_preview: true,
      });

      if (response.status === 200 && response.data.ok) {
        logger.info("Telegram notification sent successfully");
        return true;
      } else {
        logger.error(
          `Failed to send Telegram notification: ${JSON.stringify(response.data)}`
        );
        return false;
      }
    } catch (error) {
      logger.error(`Error sending Telegram notification: ${error.message}`);
      return false;
    }
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö –æ—Ç–∫–ª–∏–∫–æ–≤ –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏–∏
   * @param {Object} results - –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ—Ç–∫–ª–∏–∫–æ–≤
   * @returns {Promise<boolean>} - –†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏
   */
  async notifyApplicationResults(results) {
    const { totalJobs, successCount, failedCount, startTime, endTime } =
      results;

    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –≤—Ä–µ–º—è
    const startTimeStr = new Date(startTime).toLocaleString();
    const duration = Math.round((endTime - startTime) / 1000);

    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    const message = `
<b>üìä –û—Ç—á–µ—Ç –ø–æ –æ—Ç–∫–ª–∏–∫–∞–º –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏–∏</b>

üìù <b>–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>
‚Ä¢ –í—Å–µ–≥–æ –≤–∞–∫–∞–Ω—Å–∏–π: ${totalJobs}
‚Ä¢ –£—Å–ø–µ—à–Ω—ã—Ö –æ—Ç–∫–ª–∏–∫–æ–≤: ${successCount}
‚Ä¢ –ù–µ—É–¥–∞—á–Ω—ã—Ö –æ—Ç–∫–ª–∏–∫–æ–≤: ${failedCount}
‚Ä¢ –ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: ${totalJobs > 0 ? Math.round((successCount / totalJobs) * 100) : 0}%

‚è±Ô∏è <b>–í—Ä–µ–º—è:</b>
‚Ä¢ –ù–∞—á–∞–ª–æ: ${startTimeStr}
‚Ä¢ –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${duration} —Å–µ–∫.

${successCount > 0 ? "‚úÖ –ü—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!" : "‚ö†Ô∏è –í –ø—Ä–æ—Ü–µ—Å—Å–µ –±—ã–ª–∏ –æ—à–∏–±–∫–∏!"}
    `;

    return this.sendMessage(message);
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö —Å–∫—Ä–µ–π–ø–∏–Ω–≥–∞ –≤–∞–∫–∞–Ω—Å–∏–π
   * @param {Object} results - –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–∫—Ä–µ–π–ø–∏–Ω–≥–∞
   * @returns {Promise<boolean>} - –†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏
   */
  async notifyScrapingResults(results) {
    const {
      platform,
      keywords,
      totalJobs,
      newJobs,
      duplicates,
      executionTime,
      sampleTitles,
    } = results;

    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    const message = `
<b>üîç –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–∫—Ä–µ–π–ø–∏–Ω–≥–∞ –≤–∞–∫–∞–Ω—Å–∏–π</b>

üìù <b>–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞:</b>
‚Ä¢ –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: ${platform}
‚Ä¢ –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞: ${keywords}

üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>
‚Ä¢ –í—Å–µ–≥–æ –Ω–∞–π–¥–µ–Ω–æ: ${totalJobs}
‚Ä¢ –ù–æ–≤—ã—Ö –≤–∞–∫–∞–Ω—Å–∏–π: ${newJobs}
‚Ä¢ –î—É–±–ª–∏–∫–∞—Ç–æ–≤: ${duplicates}
‚Ä¢ –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: ${Math.round(executionTime / 1000)} —Å–µ–∫.

${
  sampleTitles && sampleTitles.length > 0
    ? `üìã <b>–ü—Ä–∏–º–µ—Ä—ã –≤–∞–∫–∞–Ω—Å–∏–π:</b>\n‚Ä¢ ${sampleTitles.join("\n‚Ä¢ ")}`
    : ""
}

${newJobs > 0 ? "‚úÖ –ù–∞–π–¥–µ–Ω—ã –Ω–æ–≤—ã–µ –≤–∞–∫–∞–Ω—Å–∏–∏!" : "‚ö†Ô∏è –ù–æ–≤—ã—Ö –≤–∞–∫–∞–Ω—Å–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ."}
    `;

    return this.sendMessage(message);
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
   * @param {string} errorType - –¢–∏–ø –æ—à–∏–±–∫–∏
   * @param {string} message - –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
   * @param {Object} details - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ—Ç–∞–ª–∏
   * @returns {Promise<boolean>} - –†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏
   */
  async notifyError(errorType, message, details = {}) {
    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
    let errorMessage = `
<b>‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤ —Å–∏—Å—Ç–µ–º–µ</b>

<b>–¢–∏–ø –æ—à–∏–±–∫–∏:</b> ${errorType}
<b>–°–æ–æ–±—â–µ–Ω–∏–µ:</b> ${message}
    `;

    // –î–æ–±–∞–≤–ª—è–µ–º –¥–µ—Ç–∞–ª–∏ –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
    if (Object.keys(details).length > 0) {
      errorMessage += "\n<b>–î–µ—Ç–∞–ª–∏:</b>\n";

      if (details.platform) {
        errorMessage += `‚Ä¢ –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: ${details.platform}\n`;
      }

      if (details.url) {
        errorMessage += `‚Ä¢ URL: ${details.url}\n`;
      }

      if (details.error) {
        errorMessage += `‚Ä¢ –û—à–∏–±–∫–∞: ${details.error}\n`;
      }
    }

    errorMessage += "\n‚è∞ " + new Date().toLocaleString();

    return this.sendMessage(errorMessage);
  }
}

// –°–æ–∑–¥–∞–µ–º –∏ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å
const telegramService = new TelegramService();
module.exports = telegramService;
